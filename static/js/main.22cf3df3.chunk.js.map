{"version":3,"sources":["App.js","index.js"],"names":["App","useState","dark","setdark","item","setitem","list","setlist","complete","useEffect","className","onClick","onSubmit","e","preventDefault","temp","id","length","task","type","value","onChange","console","log","currentTarget","map","i","splice","target","parentNode","style","display","deleteThis","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA8EeA,MA1Ef,WAAgB,IAAD,EACWC,mBAAS,aADpB,mBACNC,EADM,KACAC,EADA,OAESF,mBAAS,KAFlB,mBAERG,EAFQ,KAEFC,EAFE,OAGSJ,mBAAS,IAHlB,mBAGRK,EAHQ,KAGFC,EAHE,OAImBN,oBAAS,GAJ5B,mBAINO,EAJM,KAyCb,OAzCa,KAMbC,qBAAU,WACR,OAAO,eACN,CAACL,IAkCF,sBAAKM,UAAS,cAASR,EAAT,KAAd,UACE,sBAAKQ,UAAU,OAAf,UACE,4CACA,wBAAQC,QAAS,WAjCnBR,EADW,cAATD,EACM,aACK,cAgCX,4BAEF,gCACE,sBAAMU,SAjBI,SAACC,GACfA,EAAEC,iBACF,IAAIC,EAAI,YAAOT,GAEfS,EAAI,sBAAOT,GAAP,CAAa,CAAEU,GAAIV,EAAKW,OAAS,EAAGC,KAAMd,EAAMI,SAAUA,KAC9DD,EAAQQ,GAERV,EAAQ,KAUJ,SACE,uBAAOc,KAAK,OAAOC,MAAOhB,EAAMiB,SAjCnB,SAACR,GACpBS,QAAQC,IAAI,gBACZnB,EAAOC,EAAQQ,EAAEW,cAAcJ,YAkC3B,oBAAIV,UAAU,OAAd,SACGJ,EAAKmB,KAAI,SAACZ,EAAGa,GACZ,OACE,qBAAIV,GAAIU,EAAR,UACE,uBAAOP,KAAK,WAAWC,MAAOP,EAAEL,WAC/BK,EAAEK,KAAM,IACT,wBACEP,QAAS,SAACe,IAlCP,SAACb,GAClBP,EAAKqB,OAAOd,EAAG,GACfA,EAAEe,OAAOC,WAAWC,MAAMC,QAAU,OAEpCxB,EAAQD,GA+BQ0B,CAAWN,IAFf,mCCzDhBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22cf3df3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [dark, setdark] = useState(\"darkTheme\");\n  let [item, setitem] = useState(\" \");\n  var [list, setlist] = useState([]);\n  const [complete, setcomplete] = useState(true);\n\n  useEffect(() => {\n    return () => {};\n  }, [item]);\n\n  function changeTheme() {\n    if (dark === \"darkTheme\") {\n      setdark(\"lightTheme\");\n    } else setdark(\"darkTheme\");\n  }\n\n  const handleChange = (e) => {\n    console.log(\"handlechnage\");\n    item = setitem(e.currentTarget.value);\n  };\n\n  const handleComplete = () => {\n    setcomplete(!complete);\n    console.log(complete);\n  };\n  const deleteThis = (e) => {\n    list.splice(e, 1);\n    e.target.parentNode.style.display = \"none\";\n\n    setlist(list);\n  };\n  const addItem = (e) => {\n    e.preventDefault();\n    let temp = [...list];\n\n    temp = [...list, { id: list.length + 1, task: item, complete: complete }];\n    setlist(temp);\n\n    setitem(\"\");\n  };\n\n  return (\n    <div className={`app ${dark} `}>\n      <div className=\"head\">\n        <h1>To-Do list</h1>\n        <button onClick={() => changeTheme()}>changeTheme</button>\n      </div>\n      <div>\n        <form onSubmit={addItem}>\n          <input type=\"text\" value={item} onChange={handleChange} />\n          {/* <input type=\"checkbox\" checked={complete} onChange={handleComplete} /> */}\n        </form>\n        <ul className=\"list\">\n          {list.map((e, i) => {\n            return (\n              <li id={i}>\n                <input type=\"checkbox\" value={e.complete} />\n                {e.task}{\" \"}\n                <button\n                  onClick={(i) => {\n                    deleteThis(i);\n                  }}\n                >\n                  delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}